getwd()
library(janitor)
library(tidyverse)
library(dplyr )
library(ggplot2)
library(reshape2)
library(magrittr)
library(knitr)
work <- read.csv("ENDOPHYTE_PLATING_trim_notraw.csv")
colname <- colnames(work)
kable(colname)
unique(work$COLUMN) %>% as.matrix(COLUMN, ncol=6) -> samples_plated
kable(samples_plated)
work$COLUMN_TREATMENT = as.factor(as.character(work$COLUMN_TREATMENT))
work$CFU_PER_GRAM = as.numeric(as.character(work$CFU_PER_GRAM))
work$resistant <- work$COUNT>0
work$MEDIA <- as.factor(as.character(work$MEDIA))
work$DILUTION <- as.factor(as.numeric(work$DILUTION))
is.character(work$COUNT)
is.numeric(work$CFU_PER_GRAM)
is.factor(work$COLUMN_TREATMENT)
is.factor(work$MEDIA)
is.factor(work$DILUTION)
a <- work %>% count(COLUMN_TREATMENT, resistant , sort = FALSE)
work%<>% na.omit
kable(a)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$COLUMN_TREATMENT), FUN = mean)
kable(b)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$ANTIBIOTICS_ERM), FUN = mean)
kable(b)
work.summary <- work %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary)
cfu_column_trt<- ggplot(work, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth by Column Treatment") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary)
cfu_column_trt
#ggsave("Growth by Column Treatment.png")
work2 <- work
dil0 <- filter(work2, DILUTION == "0")
work.summary2 <- dil0 %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary2)
cfu_column_trt_dil0<- ggplot(dil0, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth of Dilution 0, by Sample Treatment") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary2)
cfu_column_trt_dil0
#ggsave("Growth of Dilution 0, by Sample Treatment.png")
LBA <- filter(dil0, MEDIA == "LBA")
R2A <- filter(dil0, MEDIA == "R2A")
R2A_summary <- R2A %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
LBA_summary <- LBA %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM))
kable(R2A_summary, caption = "Standard Deviation and Mean Growth of R2A plates (dilution 0) by Sample Treatment")
kable(LBA_summary, caption = "Standard Deviation and Mean Growth of LBA plates (dilution 0) by Sample Treatment")
cfu_sample_trt_dil0_R2A<- ggplot(R2A, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on R2A media, by Column Treatment (dilution 0)") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = R2A_summary)
cfu_sample_trt_dil0_R2A
#ggsave("Growth on R2A media, by Column Treatment (dilution 0).png")
cfu_sample_trt_dil0_LBA<- ggplot(LBA, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on LBA media, by Sample Treatment (dilution 0)") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = LBA_summary)
cfu_sample_trt_dil0_LBA
#ggsave("Growth on LBA media, by Sample Treatment (dilution 0).png")
#work2$resistant = as.factor(as.logical(work2$resistant))
ggplot(data=work, aes(x=COLUMN_TREATMENT, y=resistant, fill=resistant)) +
geom_bar(stat="identity") +
labs(x = "Column Treatment", y = "Plates with Erm-resistant colonies")
ggtitle("Plates with or without Erythromycin-resistant Colony Growth")
ggsave("ResistantPlates.png")
#work%>%
#ggplot(aes(x=COLUMN_TREATMENT,y = resistant,fill=factor(resistant)))+
#geom_bar(stat = "identity",position = "dodge")+
#scale_fill_discrete(name = "Resistance", labels = c("Not resistant", "Resistant"))
#STILL TRYING TO GET THIS TO WORK.
work <- read.csv("TNTC_CONVERTED.csv")
work$COLUMN_TREATMENT = as.factor(as.character(work$COLUMN_TREATMENT))
work$CFU_PER_GRAM = as.numeric(as.character(work$CFU_PER_GRAM))
work$resistant <- work$COUNT>0
work$MEDIA <- as.factor(as.character(work$MEDIA))
work$DILUTION <- as.factor(as.numeric(work$DILUTION))
is.character(work$COUNT)
is.numeric(work$CFU_PER_GRAM)
is.factor(work$COLUMN_TREATMENT)
is.factor(work$MEDIA)
is.factor(work$DILUTION)
a <- work %>% count(COLUMN_TREATMENT, resistant , sort = FALSE)
work%<>% na.omit
kable(a)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$COLUMN_TREATMENT), FUN = mean)
kable(b)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$ANTIBIOTICS_ERM), FUN = mean)
kable(b)
work.summary <- work %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary)
cfu_column_trt<- ggplot(work, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth by Column Treatment for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary)
cfu_column_trt
#ggsave("Growth by Column Treatment for TNTC = 500.png")
work2 <- work
dil0 <- filter(work2, DILUTION == "0")
work.summary2 <- dil0 %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary2)
cfu_column_trt_dil0<- ggplot(dil0, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth of Dilution 0, by Sample Treatment for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary2)
cfu_column_trt_dil0
#ggsave("Growth of Dilution 0, by Sample Treatment for TNTC = 500.png")
LBA <- filter(dil0, MEDIA == "LBA")
R2A <- filter(dil0, MEDIA == "R2A")
R2A_summary <- R2A %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
LBA_summary <- LBA %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM))
kable(R2A_summary, caption = "Standard Deviation and Mean Growth of R2A plates (dilution 0) by Sample Treatment for TNTC = 500")
kable(LBA_summary, caption = "Standard Deviation and Mean Growth of LBA plates (dilution 0) by Sample Treatment for TNTC = 500")
cfu_sample_trt_dil0_R2A<- ggplot(R2A, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on R2A media, by Column Treatment (dilution 0) for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = R2A_summary)
cfu_sample_trt_dil0_R2A
#ggsave("Growth on R2A media, by Column Treatment (dilution 0) for TNTC = 500.png")
cfu_sample_trt_dil0_LBA<- ggplot(LBA, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on LBA media, by Sample Treatment (dilution 0) for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = LBA_summary)
cfu_sample_trt_dil0_LBA
#ggsave("Growth on LBA media, by Sample Treatment (dilution 0) for TNTC = 500")
getwd()
library(janitor)
library(tidyverse)
library(dplyr )
library(ggplot2)
library(reshape2)
library(magrittr)
library(knitr)
work <- read.csv("ENDOPHYTE_PLATING_trim_notraw.csv")
colname <- colnames(work)
kable(colname)
unique(work$COLUMN) %>% as.matrix(COLUMN, ncol=6) -> samples_plated
kable(samples_plated)
work$COLUMN_TREATMENT = as.factor(as.character(work$COLUMN_TREATMENT))
work$CFU_PER_GRAM = as.numeric(as.character(work$CFU_PER_GRAM))
work$resistant <- work$COUNT>0
work$MEDIA <- as.factor(as.character(work$MEDIA))
work$DILUTION <- as.factor(as.numeric(work$DILUTION))
is.character(work$COUNT)
is.numeric(work$CFU_PER_GRAM)
is.factor(work$COLUMN_TREATMENT)
is.factor(work$MEDIA)
is.factor(work$DILUTION)
a <- work %>% count(COLUMN_TREATMENT, resistant , sort = FALSE)
work%<>% na.omit
kable(a)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$COLUMN_TREATMENT), FUN = mean)
kable(b)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$ANTIBIOTICS_ERM), FUN = mean)
kable(b)
work.summary <- work %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary)
cfu_column_trt<- ggplot(work, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth by Column Treatment") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary)
cfu_column_trt
ggsave("Growth by Column Treatment.png")
work2 <- work
dil0 <- filter(work2, DILUTION == "0")
work.summary2 <- dil0 %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary2)
cfu_column_trt_dil0<- ggplot(dil0, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth of Dilution 0, by Sample Treatment") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary2)
cfu_column_trt_dil0
ggsave("Growth of Dilution 0, by Sample Treatment.png")
LBA <- filter(dil0, MEDIA == "LBA")
R2A <- filter(dil0, MEDIA == "R2A")
R2A_summary <- R2A %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
LBA_summary <- LBA %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM))
kable(R2A_summary, caption = "Standard Deviation and Mean Growth of R2A plates (dilution 0) by Sample Treatment")
kable(LBA_summary, caption = "Standard Deviation and Mean Growth of LBA plates (dilution 0) by Sample Treatment")
cfu_sample_trt_dil0_R2A<- ggplot(R2A, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on R2A media, by Column Treatment (dilution 0)") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = R2A_summary)
cfu_sample_trt_dil0_R2A
ggsave("Growth on R2A media, by Column Treatment (dilution 0).png")
cfu_sample_trt_dil0_LBA<- ggplot(LBA, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on LBA media, by Sample Treatment (dilution 0)") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = LBA_summary)
cfu_sample_trt_dil0_LBA
ggsave("Growth on LBA media, by Sample Treatment (dilution 0).png")
#work2$resistant = as.factor(as.logical(work2$resistant))
ggplot(data=work, aes(x=COLUMN_TREATMENT, y=resistant, fill=resistant)) +
geom_bar(stat="identity") +
labs(x = "Column Treatment", y = "Plates with Erm-resistant colonies")
ggtitle("Plates with or without Erythromycin-resistant Colony Growth")
ggsave("ResistantPlates.png")
#work%>%
#ggplot(aes(x=COLUMN_TREATMENT,y = resistant,fill=factor(resistant)))+
#geom_bar(stat = "identity",position = "dodge")+
#scale_fill_discrete(name = "Resistance", labels = c("Not resistant", "Resistant"))
#STILL TRYING TO GET THIS TO WORK.
work <- read.csv("TNTC_CONVERTED.csv")
work$COLUMN_TREATMENT = as.factor(as.character(work$COLUMN_TREATMENT))
work$CFU_PER_GRAM = as.numeric(as.character(work$CFU_PER_GRAM))
work$resistant <- work$COUNT>0
work$MEDIA <- as.factor(as.character(work$MEDIA))
work$DILUTION <- as.factor(as.numeric(work$DILUTION))
is.character(work$COUNT)
is.numeric(work$CFU_PER_GRAM)
is.factor(work$COLUMN_TREATMENT)
is.factor(work$MEDIA)
is.factor(work$DILUTION)
a <- work %>% count(COLUMN_TREATMENT, resistant , sort = FALSE)
work%<>% na.omit
kable(a)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$COLUMN_TREATMENT), FUN = mean)
kable(b)
b <- aggregate(work$CFU_PER_GRAM, by = list(work$ANTIBIOTICS_ERM), FUN = mean)
kable(b)
work.summary <- work %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary)
cfu_column_trt<- ggplot(work, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth by Column Treatment for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary)
cfu_column_trt
ggsave("Growth by Column Treatment for TNTC = 500.png")
work2 <- work
dil0 <- filter(work2, DILUTION == "0")
work.summary2 <- dil0 %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
kable(work.summary2)
cfu_column_trt_dil0<- ggplot(dil0, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth of Dilution 0, by Sample Treatment for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = work.summary2)
cfu_column_trt_dil0
ggsave("Growth of Dilution 0, by Sample Treatment for TNTC = 500.png")
LBA <- filter(dil0, MEDIA == "LBA")
R2A <- filter(dil0, MEDIA == "R2A")
R2A_summary <- R2A %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM)
)
LBA_summary <- LBA %>%
group_by(COLUMN_TREATMENT) %>%
summarise(
sd = sd(CFU_PER_GRAM, na.rm = TRUE),
CFU_PER_GRAM = mean(CFU_PER_GRAM))
kable(R2A_summary, caption = "Standard Deviation and Mean Growth of R2A plates (dilution 0) by Sample Treatment for TNTC = 500")
kable(LBA_summary, caption = "Standard Deviation and Mean Growth of LBA plates (dilution 0) by Sample Treatment for TNTC = 500")
cfu_sample_trt_dil0_R2A<- ggplot(R2A, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on R2A media, by Column Treatment (dilution 0) for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = R2A_summary)
cfu_sample_trt_dil0_R2A
ggsave("Growth on R2A media, by Column Treatment (dilution 0) for TNTC = 500.png")
cfu_sample_trt_dil0_LBA<- ggplot(LBA, aes(COLUMN_TREATMENT, CFU_PER_GRAM, color=COLUMN_TREATMENT)) +
ggtitle("Growth on LBA media, by Sample Treatment (dilution 0) for TNTC = 500") +
labs(x = "Column Treatment", y = "CFU per gram") +
geom_jitter(position = position_jitter(0.2), color = "gray") +
geom_pointrange(aes(ymin = CFU_PER_GRAM-sd,
ymax = CFU_PER_GRAM+sd),data = LBA_summary)
cfu_sample_trt_dil0_LBA
ggsave("Growth on LBA media, by Sample Treatment (dilution 0) for TNTC = 500")
library(tidyverse)
library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
view(phylo)
phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
slicey <- phylo1
check2<- bold_seq(taxon = NULL, ids = slicey$processid, bin = slicey$bin_uri, container = NULL, institutions = NULL, researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
str(check2)
sequence_df<- as.data.frame(check2)
as.data.frame(sequence_df, col.names = c("id", "sequence"))
seqlist<- as.data.frame(matrix(unlist(sequence_df, use.names = FALSE), ncol = 4, byrow= TRUE))
seqlist1=seqlist
colnames(seqlist1) = c("id", "name", "gene", "sequence")
seqlist2 <- as.tibble(seqlist1) %>%select(1,4)
check2_1<- bold_seq(taxon = NULL, ids = bdj$processid, bin = NULL, container = NULL, institutions = NULL, researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
str(check2_1)
sequence_df2<- as.data.frame(check2_1)
sequence_df2
seqlist2<- as.data.frame(matrix(unlist(sequence_df2, use.names = FALSE), ncol = 4, byrow= TRUE))
seqlist3=seqlist2
seqlist3 <- as.tibble(seqlist2) %>%select(1,4)
colnames(seqlist3) = c("processid", "retrieved_seq")
sequence_merge_main <- merge(seqlist3, bdj, by = "processid")
names <- (seqlist3$processid)
sequences <- (seqlist3$retrieved_seq)
dfintermediate <- data.frame(names,sequences)
df1.fasta = dataframe2fas(dfintermediate, file = "df1.fasta")
#fastatry <- system.file("df1.fasta", package = "msa"
mySequences <- readDNAStringSet("df1.fasta")
mySequences
myFirstAlignment <- msa(mySequences)
getwd()
setwd("~/Documents/GitHub/BCB_final_collab")
readxml<- "https://github.com/magwabat/BCB_final_collab/blob/455f15f416abe63cabee3753b6da96a50337e68c/bug_tree.xml"
readxml
readxml<- (https://github.com/magwabat/BCB_final_collab/blob/455f15f416abe63cabee3753b6da96a50337e68c/bug_tree.xml)
readxml<- (https:/github.com/magwabat/BCB_final_collab/blob/455f15f416abe63cabee3753b6da96a50337e68c/bug_tree.xml)
readxml<- (https/github.com/magwabat/BCB_final_collab/blob/455f15f416abe63cabee3753b6da96a50337e68c/bug_tree.xml)
readxml <- (https://github.com/magwabat/BCB_final_collab.git)
readxml <- (https://github.com/magwabat/BCB_final_collab.git/bug_tree.xml)
readxml <- ("https://github.com/magwabat/BCB_final_collab.git/bug_tree.xml")
readxml
readxml <- download.file("https://github.com/magwabat/BCB_final_collab.git/bug_tree.xml")
readxml <- download.file(https://github.com/magwabat/BCB_final_collab.git/bug_tree.xml)
getwd()
bug <- "bug_tree.xml"
bug
bug_tree <- read.table("~/Documents/GitHub/BCB_final_collab/bug_tree.xml", quote="\"", comment.char="")
View(bug_tree)
bug <- "bug_tree.xml"
bug
getwd()
bug_tree <- read.table("~/Documents/GitHub/BCB_final_collab/bug_tree.xml", quote="\"", comment.char="")
View(bug_tree)
bug <- ("bug_tree.xml")
library(readr)
bug_tree <- read_csv("bug_tree.xml")
View(bug_tree)
install.packages("XML")
library(XML)
bug <- ("bug_tree.xml")
install.packages("XML")
install.packages("XML")
library(XML)
install.packages("methods")
install.packages("methods")
install.packages("methods")
library(methods)
result <- xmlParse(file = "bug_tree.xml")
install.packages("XML2")
install.packages("xml2")
library(xml2)
library(methods)
result <- xmlParse(file = "bug_tree.xml")
library(xml2)
result <- xmlParse("bug_tree.xml")
library(XML)
library(methods)
result <- xmlParseDoc("bug_tree.xml")
result
bugxml <- xmlParseDoc("bug_tree.xml")
library(ggtree)
tree <- bugxml
ggtree(tree)
ggtree(bugxml)

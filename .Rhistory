library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
view(phylo)
phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
slicey <- phylo1
check2<- bold_seq(taxon = NULL, ids = slicey$processid, bin = slicey$bin_uri, container = NULL, institutions = NULL,
researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
str(check2)
sequence_df<- as.data.frame(check2)
#as.data.frame(sequence_df, col.names = c("id", "sequence"))
View(seqlist2)
seqlist<- as.data.frame(matrix(unlist(check2, use.names = FALSE), ncol = 4, byrow= TRUE))
colnames(seqlist) = c("id", "name", "gene", "sequence")
seqlist2 <- as.tibble(seqlist1) %>%select(1,2,4)
colnames(seqlist) = c("id", "name", "gene", "sequence")
seqlist_tibble <- as.tibble(seqlist) %>%select(1,2,4)
check2_1<- bold_seq(taxon = NULL, ids = bdj$processid, bin = NULL, container = NULL, institutions = NULL, researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
colnames(seqlist) = c("id", "name", "gene", "sequence")
seqlist_tibble <- as.tibble(seqlist) %>%select(1,2,4)
View(seqlist)
check2_1<- bold_seq(taxon = NULL, ids = bdj$processid, bin = NULL, container = NULL, institutions = NULL, researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
View(check2_1)
str(check2_1)
sequence_df2<- as.data.frame(check2_1)
sequence_df2
View(sequence_df2)
class(seqlist)
seqlistcombo<- seqlist3 %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
View(seqlistcombo)
dim(seqlistcombo)
seqlistcombo<- seqlist %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
#seqlist3combo <- seqlist3 %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
dim(seqlistcombo)
View(seqlistcombo)
View(seqlist3)
getwd()
library(tidyverse)
library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
view(phylo)
phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
slicey <- phylo1
check2<- bold_seq(taxon = NULL, ids = slicey$processid, bin = slicey$bin_uri, container = NULL, institutions = NULL,
researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
str(check2)
sequence_df<- as.data.frame(check2)
#as.data.frame(sequence_df, col.names = c("id", "sequence"))
seqlist<- as.data.frame(matrix(unlist(check2, use.names = FALSE), ncol = 4, byrow= TRUE))
knitr::opts_chunk$set(echo = TRUE)
phylo_bold<- bold_seq(taxon = NULL, ids = phylo$processid, bin = phylo$bin_uri, container = NULL, institutions = NULL,
researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
#phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
View(phylo_bold)
View(phylo_bold)
#str(check2)
sequence_df<- as.data.frame(phylo_bold)
#str(check2)
phylo_bold_df<- as.data.frame(phylo_bold)
View(phylo_bold_df)
str(phylo_bold)
str(phylo_bold)
phylo_bold_df<- as.data.frame(phylo_bold)
View(phylo_bold_df)
seqlist_phylo_bold<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
View(seqlist_phylo_bold)
phylo_bold_df<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
View(phylo_bold_df)
colnames(phylo_bold_df) = c("id", "name", "gene", "sequence")
seqlist_tibble <- as.tibble(phylo_bold_df) %>%select(1,2,4)
seqlist_tibble
phylo_bold_trim <- as.tibble(phylo_bold_df) %>%select(1,2,4)
phylo_bold_trim
phylo_bold_df<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
phylo_bold_df<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
#colnames(phylo_bold_df) = c("id", "name", "gene", "sequence")
phylo_bold_trim <- as.tibble(phylo_bold_df) %>%select(1,2,4)
phylo_bold_trim
View(phylo_bold_trim)
colnames(phylo_bold_trim) = c("ID", "name", "sequence")
phylo_bold_trim
View(phylo_bold_trim)
#colnames(phylo_bold_df) = c("id", "name", "gene", "sequence")
phylo_bold_trim <- as.tibble(phylo_bold_df) %>%select(1,2,4)
colnames(phylo_bold_trim) = c("ID", "name", "sequence")
phylo_bold_trim
class(phylo_bold_trim)
phylo_bold_combo<- phylo_bold_trim %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
View(phylo_bold_combo)
class(phylo_bold_combo)
bold_combo_df <- as.data.frame(phylo_bold_combo)
class(seqlist3combo_df)
#seqlist3_ <- as.tibble(seqlist3)
#seqlist3.fasta = dataframe2fas(seqlist3_df2, file = "df_seqlist3.fasta")
seqlist3.fasta = dataframe2fas(seqlist3combo_df, file = "seqlist3.fasta")
class(bold_combo_df)
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold_fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold_fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold.fasta")
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold_fasta")
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold_fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold.fasta")
fastatryphy <- system.file("phylo_bold.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold.fasta")
fastatryphy <- system.file("phylo_bold.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold.fasta")
fastatryphy <- system.file("phylo_bold.fasta", package = "msa")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("phyto_bold.fasta")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
phylo_aligned <- readDNAStringSet("fastatryphy")
fastatry <- system.file("df1.fasta", package = "msa")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequences1 <- readDNAStringSet("fastatry")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequences1 <- readDNAStringSet(fastatryphy)
fastatryphy <- system.file("df1.fasta", package = "msa")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequences1 <- readDNAStringSet(fastatryphy)
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold.fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequences1 <- readDNAStringSet("phylo_bold.fasta")
mySequences1
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequencesphylo <- readDNAStringSet("phylo_bold.fasta")
mySequencesphylo
###mySequencesphylo <- readDNAStringSet("phylo_bold.fasta")
###mySequencesphylo
phylo_alignment <- msa(phylo_bold.fasta)
mySequencesphylo <- readDNAStringSet("phylo_bold.fasta")
###mySequencesphylo
phylo_alignment <- msa(mySequencesphylo)
phylo_alignment
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
#phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
phylo_bold<- bold_seq(taxon = NULL, ids = phylo$processid, bin = phylo$bin_uri, container = NULL, institutions = NULL,
researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
phylo_bold_df<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
#colnames(phylo_bold_df) = c("id", "name", "gene", "sequence")
phylo_bold_trim <- as.tibble(phylo_bold_df) %>%select(1,2,4)
colnames(phylo_bold_trim) = c("ID", "name", "sequence")
phylo_bold_combo<- phylo_bold_trim %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
class(phylo_bold_combo)
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold.fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
#fastatryphy <- system.file("phylo_bold.fasta", package = "msa")
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
#phylo_aligned <- readDNAStringSet("fastatryphy")
#phylo_aligned
#fastatry <- system.file("phylo_bold.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
#mySequences1 <- readDNAStringSet("seqlist3.fasta")
#mySequences1
#fastatry <- system.file("df1.fasta", package = "msa"
#mySequences <- readDNAStringSet("df1.fasta")
#mySequences
mySequencesphylo <- readDNAStringSet("phylo_bold.fasta")
phylo_alignment <- msa(mySequencesphylo)
phylo_alignment
phylo_bold_trim
view(phylo_bold_trim)
phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
phylo1 <- phylo%>%add_column(retrieved_seq = NA )%>%select(1:8,81,everything())
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(lemon)
library(knitr)
library(janitor)
library(dplyr )
library(ggplot2)
library(reshape2)
library(bold)
library(spider)
library(data.table)
library(msa)
library(ggtree)
library(treeio)
library(phangorn)
library(seqRFLP)
library(ape)
library(adegenet)
library(ade4)
library(ggimage)
library(TDbook)
#if (!requireNamespace("BiocManager", quietly=TRUE))
#install.packages("BiocManager")
#BiocManager::install("msa")
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("ggtree")
bdj<-read_tsv("DS-KROK4BDJ.txt", show_col_types = FALSE )
column_names <- colnames(bdj)
view(bdj)
dim(bdj)
kable(column_names)
kable(bdj[1:5])
bdj$phylum_taxID = as.factor(as.numeric(bdj$phylum_taxID))
bdj$class_taxID = as.factor(as.numeric(bdj$class_taxID))
bdj$order_taxID = as.factor(as.numeric(bdj$order_taxID))
bdj$family_taxID = as.factor(as.numeric(bdj$family_taxID))
bdj$genus_taxID = as.factor(as.numeric(bdj$genus_taxID))
bdj$species_taxID = as.factor(as.numeric(bdj$species_taxID))
bdj$subspecies_taxID = as.factor(as.numeric(bdj$subspecies_taxID))
bdj$phylum_name = as.factor(as.character(bdj$phylum_name))
bdj$class_name = as.factor(as.character(bdj$class_name))
bdj$order_name = as.factor(as.character(bdj$order_name))
bdj$family_name = as.factor(as.character(bdj$family_name))
bdj$genus_name = as.factor(as.character(bdj$genus_name))
bdj$species_name = as.factor(as.character(bdj$species_name))
bdj$subspecies_name = as.factor(as.character(bdj$subspecies_name))
unique(bdj$family_name) %>% as.matrix(family_name) -> family_name_view
kable(family_name_view)
ggplot(bdj, aes(x=reorder(family_name, family_name, function(x)-length(x)),fill=family_name)) +
geom_bar() +
labs(title="Individuals per Family",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90))
ggplot(bdj, aes(x=reorder(genus_name, genus_name, function(x)-length(x)),fill=genus_name)) +
geom_bar() +
labs(title="Individuals per Genus",
x="Family Name", y = "Count") +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position="none")
phylo <- bdj
phylo_bold<- bold_seq(taxon = NULL, ids = phylo$processid, bin = phylo$bin_uri, container = NULL, institutions = NULL,
researchers = NULL, geo = NULL, marker = "COI-5P", response = FALSE)
phylo_bold_df<- as.data.frame(matrix(unlist(phylo_bold, use.names = FALSE), ncol = 4, byrow= TRUE))
phylo_bold_trim <- as.tibble(phylo_bold_df) %>%select(1,2,4)
colnames(phylo_bold_trim) = c("ID", "name", "sequence")
phylo_bold_combo<- phylo_bold_trim %>% unite("name", 1:2, na.rm = TRUE, remove = TRUE)
class(phylo_bold_combo)
bold_combo_df <- as.data.frame(phylo_bold_combo)
phylo_bold.fasta = dataframe2fas(bold_combo_df, file = "phylo_bold.fasta")
mySequencesphylo <- readDNAStringSet("phylo_bold.fasta")
phylo_alignment <- msa(mySequencesphylo)
phylo_alignment
dim(phylo)
dim(phylo_bold)
dim(phylo_bold_df)
colnames(phylo)
view(phylo)
sum(is.na(phylo$bin_uri))
len(is.na(phylo$bin_uri))
length(is.na(phylo$bin_uri))
length(!is.na(phylo$bin_uri))
view(phylo)
